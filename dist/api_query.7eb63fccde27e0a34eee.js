(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"/Xgc":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("EVdn");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("vDqi");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar url = \'https://itunes.apple.com/search?term=twice&limit=10\';\n\nfunction printData(data) {\n  var dataObj = data;\n  dataObj.results.forEach(function (el) {\n    var artistName = el.artistName,\n        collectionName = el.collectionName,\n        collectionViewUrl = el.collectionViewUrl,\n        artworkUrl100 = el.artworkUrl100;\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\'body\').append("\\n        <div class=\\"card\\">\\n            <div class=\\"image\\">\\n                <img src=\\"".concat(artworkUrl100, "\\" onclick=\\"window.open(\'").concat(collectionViewUrl, "\')\\"/>\\n            </div>\\n            <div class=\\"info\\">\\n                <p>").concat(artistName, "</p>\\n                <p>").concat(collectionName, "</p>\\n            </div>\\n        </div>\\n        "));\n  });\n}\n\nfunction getAlbum() {\n  // method 3:\n  axios__WEBPACK_IMPORTED_MODULE_1___default()({\n    url: url,\n    method: \'get\'\n  }).then(function (response) {\n    // `data` is the response that was provided by the server\n    printData(response.data); // `status` is the HTTP status code from the server response\n\n    console.log(response.status); // `statusText` is the HTTP status message from the server response\n\n    console.log(response.statusText); // `headers` the HTTP headers that the server responded with\n    // All header names are lower cased and can be accessed using the bracket notation.\n    // Example: `response.headers[\'content-type\']`\n\n    console.log(response.headers); // `config` is the config that was provided to `axios` for the request\n\n    console.log(response.config); // `request` is the request that generated this response\n    // It is the last ClientRequest instance in node.js (in redirects)\n    // and an XMLHttpRequest instance in the browser\n\n    console.log(response.request);\n  })["catch"](function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error(error.response.status);\n      console.error(error.response.statusText);\n      console.error(error.response.data);\n      console.error(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser \n      // and an instance of http.ClientRequest in node.js\n      console.error(error.request);\n    }\n\n    console.error(\'Error:\', error.message);\n    console.error(error.config);\n  }); // // method 2:\n  // fetch(url, {\n  //     method: \'get\'\n  // }).then(res => {\n  //     // fetch 和 jQuery.ajax() 的差異：\n  //     // fetch() 回傳的 promise 物件, 當遇到 HTTP Status 404, 500 時\n  //     // 仍會使用 resolve 但 res.ok 為 false，\n  //     // reject 只在網路發生錯誤或任何中斷請求時才使用。\n  //     if (!res.ok) throw new Error(\'Network response was not ok.\');\n  //     // 可透過 blob(), json(), text() 取得資料\n  //     // 若出現錯誤："Failed to execute \'json\' on \'Response\': body stream is locked"\n  //     // 原因為 Response methode like \'json\', \'text\' can be called once, and then it locks.\n  //     // 可使用下列方法將 json 暫存\n  //     let json = res.json();\n  //     console.log(json);\n  //     return json;\n  // }).then(json =>\n  //     printData(json)\n  // ).catch(err =>\n  //     console.error(err)\n  // );\n  // // method 1:\n  // var request = $.ajax({\n  //     url,\n  //     method: \'get\'\n  // });\n  // request.done(function (data, textStatus, jqXHR) {\n  //     printData(JSON.parse(data))\n  // });\n  // request.fail(function (jqXHR, textStatus, errorThrown) {\n  //     alert(textStatus)\n  // });\n  // request.always(function () {\n  //     // alert("complete")\n  // });\n}\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(function () {\n  getAlbum();\n});\n\n//# sourceURL=webpack:///./src/js/api_query.js?')}},[["/Xgc",0,1]]]);